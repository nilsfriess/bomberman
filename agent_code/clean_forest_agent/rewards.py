import events as e

MOVED_TOWARDS_COIN = 'MOVED_TOWARDS_COIN'
MOVED_AWAY_FROM_COIN = 'MOVED_AWAY_FROM_COIN'
VALID_ACTION = 'VALID_ACTION'
NO_COIN_COLLECTED = 'NO_COIN_COLLECTED'

DECREASED_RISK = 'DECREASED_RISK'
INCREASED_RISK = 'INCREASED_RISK'
ESCAPED_RISK = 'ESCAPED_RISK'

MOVED_AWAY_FROM_BOMB = 'DID_MOVE_AWAY_FROM_BOMB'
MOVED_TOWARDS_BOMB = 'DID_NOT_MOVE_AWAY_FROM_BOMB'

USEFUL_DIRECTION = 'USEFUL_DIRECTION'
NOT_USEFUL_DIRECTION = 'NOT_USEFUL_DIRECTION'

AVOIDED_BOMB = 'AVOIDED_BOMB'

DID_NOT_SURVIVE = 'DID_NOT_SURVIVE'

BOMB_IN_CORNER = 'BOMB_IN_CORNER'

USEFUL_BOMB = 'USEFUL_BOMB'
USELESS_BOMB = 'USELESS_BOMB'
VERY_USEFUL_BOMB = 'VERY_USEFUL_BOMB'

WAITED_ON_BOMB = 'WAITED_ON_BOMB'

AVOIDED_EXPLOSION = 'AVOIDED_EXPLOSION'

ESCAPED_BOMB_BY_TURNING = 'ESCAPED_BOMB_BY_TURNING'
DID_NOT_TURN_AFTER_BOMB = 'DID_NOT_TURN_AFTER_BOMB'

DROPPED_SUICIDE_BOMB = 'DROPPED_SUICIDE_BOMB'
DROPPED_UNSAFE_BOMB = 'DROPPED_UNSAFE_BOMB'
DROPPED_SAFE_BOMB = 'DROPPED_SAFE_BOMB'

ILLEGAL_BOMB = 'ILLEGAL_BOMB'

def reward_from_events(events):
    # if (DID_MOVE_AWAY_FROM_BOMB in events) or\
    #    (DID_NOT_MOVE_AWAY_FROM_BOMB in events) or\
    #    (USEFUL_DIRECTION in events) or\
    #    (NOT_USEFUL_DIRECTION in events):
    #     print("Custom event")
    
    game_rewards = {
        e.KILLED_OPPONENT: 500,
        e.COIN_COLLECTED: 100,
        e.INVALID_ACTION: -80,
        VALID_ACTION: -5,
        BOMB_IN_CORNER: -20,
        USELESS_BOMB: -100,
        USEFUL_BOMB: 40,
        VERY_USEFUL_BOMB: 100,
        MOVED_TOWARDS_BOMB: -50,
        MOVED_AWAY_FROM_BOMB: 20,
        MOVED_TOWARDS_COIN: 20,
        MOVED_AWAY_FROM_COIN: -30,
        DECREASED_RISK: 30,
        #ESCAPED_RISK: 40,
        INCREASED_RISK: -60,
        DROPPED_SUICIDE_BOMB: -500,
        DROPPED_UNSAFE_BOMB: -100,
        DROPPED_SAFE_BOMB: -10
    }
    reward_sum = 0
    for event in events:
        if event in game_rewards:
            reward_sum += game_rewards[event]
    # self.logger.info(f"Awarded {reward_sum} for events {', '.join(events)}")
    return reward_sum
